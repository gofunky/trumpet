name: publish

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x, 13.x, 14.x]
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
    name: node.js ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: caching node modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ matrix.node-version }}
            ${{ runner.OS }}-build
      - name: installing dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true
      - name: running tests
        run: yarn test
        env:
          CI: true
      - name: running coverage
        run: yarn coverage
        env:
          CI: true
      - name: uploading coverage to codecov
        run: $(yarn bin)/codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  publish-npm:
    name: publish on npm
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2.3.4
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
          scope: '@gofunky'
      - name: caching node modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ matrix.node-version }}
            ${{ runner.OS }}-build
      - name: installing dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true
      - name: publish
        run: yarn deploy
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-gpr:
    name: publish on GitHub
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2.3.4
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com
          scope: '@gofunky'
      - name: caching node modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ matrix.node-version }}
            ${{ runner.OS }}-build
      - name: installing dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true
      - name: publish
        run: yarn deploy
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
